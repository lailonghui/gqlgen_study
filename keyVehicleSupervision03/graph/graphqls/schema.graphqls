#schema {
#    query: Query
#    mutation: Mutation
#    subscription: Subscription
#}

scalar bigint

input bigint_comparison_exp {
    _eq: bigint
    _gt: bigint
    _gte: bigint
    _in: [bigint!]
    _is_null: Boolean
    _lt: bigint
    _lte: bigint
    _neq: bigint
    _nin: [bigint!]
}

input Boolean_comparison_exp {
    _eq: Boolean
    _gt: Boolean
    _gte: Boolean
    _in: [Boolean!]
    _is_null: Boolean
    _lt: Boolean
    _lte: Boolean
    _neq: Boolean
    _nin: [Boolean!]
}

input Int_comparison_exp {
    _eq: Int
    _gt: Int
    _gte: Int
    _in: [Int!]
    _is_null: Boolean
    _lt: Int
    _lte: Int
    _neq: Int
    _nin: [Int!]
}

type Mutation {
    delete_vehicle_info(
        where: vehicle_info_bool_exp!
    ): vehicle_info_mutation_response
    delete_vehicle_info_by_pk(
        id: bigint!
        vehicle_id: String!
    ): vehicle_info
    insert_vehicle_info(
        objects: [vehicle_info_insert_input!]!
        on_conflict: vehicle_info_on_conflict
    ): vehicle_info_mutation_response
    insert_vehicle_info_one(
        object: vehicle_info_insert_input!
        on_conflict: vehicle_info_on_conflict
    ): vehicle_info
    update_vehicle_info(
        _inc: vehicle_info_inc_input
        _set: vehicle_info_set_input
        where: vehicle_info_bool_exp!
    ): vehicle_info_mutation_response
    update_vehicle_info_by_pk(
        _inc: vehicle_info_inc_input
        _set: vehicle_info_set_input
        pk_columns: vehicle_info_pk_columns_input!
    ): vehicle_info
}

scalar numeric

input numeric_comparison_exp {
    _eq: numeric
    _gt: numeric
    _gte: numeric
    _in: [numeric!]
    _is_null: Boolean
    _lt: numeric
    _lte: numeric
    _neq: numeric
    _nin: [numeric!]
}

enum order_by {
    asc
    asc_nulls_first
    asc_nulls_last
    desc
    desc_nulls_first
    desc_nulls_last
}

type Query {
    vehicle_info(
        distinct_on: [vehicle_info_select_column!]
        limit: Int
        offset: Int
        order_by: [vehicle_info_order_by!]
        where: vehicle_info_bool_exp
    ): [vehicle_info!]!
    vehicle_info_aggregate(
        distinct_on: [vehicle_info_select_column!]
        limit: Int
        offset: Int
        order_by: [vehicle_info_order_by!]
        where: vehicle_info_bool_exp
    ): vehicle_info_aggregate!
    vehicle_info_by_pk(
        id: bigint!
        vehicle_id: String!
    ): vehicle_info
}

input String_comparison_exp {
    _eq: String
    _gt: String
    _gte: String
    _ilike: String
    _in: [String!]
    _is_null: Boolean
    _like: String
    _lt: String
    _lte: String
    _neq: String
    _nilike: String
    _nin: [String!]
    _nlike: String
    _nsimilar: String
    _similar: String
}

type Subscription {
    vehicle_info(
        distinct_on: [vehicle_info_select_column!]
        limit: Int
        offset: Int
        order_by: [vehicle_info_order_by!]
        where: vehicle_info_bool_exp
    ): [vehicle_info!]!
    vehicle_info_aggregate(
        distinct_on: [vehicle_info_select_column!]
        limit: Int
        offset: Int
        order_by: [vehicle_info_order_by!]
        where: vehicle_info_bool_exp
    ): vehicle_info_aggregate!
    vehicle_info_by_pk(
        id: bigint!
        vehicle_id: String!
    ): vehicle_info
}

type vehicle_info {
    business_scope: Int
    department_id: String
    enterprise_id: String
    heavy: numeric
    id: bigint!
    industry_category: Int
    is_apply_install_terminal: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint!
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint!
    seats: Int
    terminal_id: String
    vehicle_id: String!
    vehicle_identification_number: String
    vehicle_type: Int
}

type vehicle_info_aggregate {
    aggregate: vehicle_info_aggregate_fields
    nodes: [vehicle_info!]!
}

type vehicle_info_aggregate_fields {
    avg: vehicle_info_avg_fields
    count(columns: [vehicle_info_select_column!], distinct: Boolean): Int
    max: vehicle_info_max_fields
    min: vehicle_info_min_fields
    stddev: vehicle_info_stddev_fields
    stddev_pop: vehicle_info_stddev_pop_fields
    stddev_samp: vehicle_info_stddev_samp_fields
    sum: vehicle_info_sum_fields
    var_pop: vehicle_info_var_pop_fields
    var_samp: vehicle_info_var_samp_fields
    variance: vehicle_info_variance_fields
}

input vehicle_info_aggregate_order_by {
    avg: vehicle_info_avg_order_by
    count: order_by
    max: vehicle_info_max_order_by
    min: vehicle_info_min_order_by
    stddev: vehicle_info_stddev_order_by
    stddev_pop: vehicle_info_stddev_pop_order_by
    stddev_samp: vehicle_info_stddev_samp_order_by
    sum: vehicle_info_sum_order_by
    var_pop: vehicle_info_var_pop_order_by
    var_samp: vehicle_info_var_samp_order_by
    variance: vehicle_info_variance_order_by
}

input vehicle_info_arr_rel_insert_input {
    data: [vehicle_info_insert_input!]!
    on_conflict: vehicle_info_on_conflict
}

type vehicle_info_avg_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_avg_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

input vehicle_info_bool_exp {
    _and: [vehicle_info_bool_exp]
    _not: vehicle_info_bool_exp
    _or: [vehicle_info_bool_exp]
    business_scope: Int_comparison_exp
    department_id: String_comparison_exp
    enterprise_id: String_comparison_exp
    heavy: numeric_comparison_exp
    id: bigint_comparison_exp
    industry_category: Int_comparison_exp
    is_apply_install_terminal: Boolean_comparison_exp
    license_plate_color: Int_comparison_exp
    license_plate_number: String_comparison_exp
    license_plate_type: Int_comparison_exp
    muck_truck_id: bigint_comparison_exp
    operating_route: String_comparison_exp
    operating_state: Int_comparison_exp
    operating_type: Int_comparison_exp
    operating_vehicle_id: bigint_comparison_exp
    road_transport_license_number: String_comparison_exp
    seats: Int_comparison_exp
    terminal_id: String_comparison_exp
    vehicle_id: String_comparison_exp
    vehicle_identification_number: String_comparison_exp
    vehicle_type: Int_comparison_exp
}

enum vehicle_info_constraint {
    vehicle_info_pkey
}

input vehicle_info_inc_input {
    business_scope: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    seats: Int
    vehicle_type: Int
}

input vehicle_info_insert_input {
    business_scope: Int
    department_id: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    is_apply_install_terminal: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_type: Int
}

type vehicle_info_max_fields {
    business_scope: Int
    department_id: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_type: Int
}

input vehicle_info_max_order_by {
    business_scope: order_by
    department_id: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_type: order_by
}

type vehicle_info_min_fields {
    business_scope: Int
    department_id: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_type: Int
}

input vehicle_info_min_order_by {
    business_scope: order_by
    department_id: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_type: order_by
}

type vehicle_info_mutation_response {
    affected_rows: Int!
    returning: [vehicle_info!]!
}

input vehicle_info_obj_rel_insert_input {
    data: vehicle_info_insert_input!
    on_conflict: vehicle_info_on_conflict
}

input vehicle_info_on_conflict {
    constraint: vehicle_info_constraint!
    update_columns: [vehicle_info_update_column!]!
    where: vehicle_info_bool_exp
}

input vehicle_info_order_by {
    business_scope: order_by
    department_id: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    is_apply_install_terminal: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_type: order_by
}

input vehicle_info_pk_columns_input {
    id: bigint!
    vehicle_id: String!
}

enum vehicle_info_select_column {
    business_scope
    department_id
    enterprise_id
    heavy
    id
    industry_category
    is_apply_install_terminal
    license_plate_color
    license_plate_number
    license_plate_type
    muck_truck_id
    operating_route
    operating_state
    operating_type
    operating_vehicle_id
    road_transport_license_number
    seats
    terminal_id
    vehicle_id
    vehicle_identification_number
    vehicle_type
}

input vehicle_info_set_input {
    business_scope: Int
    department_id: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    is_apply_install_terminal: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_type: Int
}

type vehicle_info_stddev_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_stddev_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

type vehicle_info_stddev_pop_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_stddev_pop_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

type vehicle_info_stddev_samp_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_stddev_samp_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

type vehicle_info_sum_fields {
    business_scope: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    seats: Int
    vehicle_type: Int
}

input vehicle_info_sum_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

enum vehicle_info_update_column {
    business_scope
    department_id
    enterprise_id
    heavy
    id
    industry_category
    is_apply_install_terminal
    license_plate_color
    license_plate_number
    license_plate_type
    muck_truck_id
    operating_route
    operating_state
    operating_type
    operating_vehicle_id
    road_transport_license_number
    seats
    terminal_id
    vehicle_id
    vehicle_identification_number
    vehicle_type
}

type vehicle_info_var_pop_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_var_pop_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

type vehicle_info_var_samp_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_var_samp_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

type vehicle_info_variance_fields {
    business_scope: Float
    heavy: Float
    id: Float
    industry_category: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    seats: Float
    vehicle_type: Float
}

input vehicle_info_variance_order_by {
    business_scope: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    seats: order_by
    vehicle_type: order_by
}

