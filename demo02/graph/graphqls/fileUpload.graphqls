"The `Upload` scalar type represents a multipart file upload."
scalar Upload

"The `File` type, represents the response of uploading a file."
type File {
    id: Int!
    name: String!
    content: String!
    contentType: String!
}

"The `UploadFile` type, represents the request for uploading a file with certain payload."
input UploadFile {
  id: Int!
  "上传人"
  from: String!
  "点赞数"
  likeNum: Int!
  file: Upload!
}

#"The `Query` type, represents all of the entry points into our object graph."
extend type Query {
    empty: String!
}

#"The `Mutation` type, represents all updates we can make to our data."
extend type Mutation {
    "上传单个文件不带参数"
    singleUpload(file: Upload!): File!
    "上传单个文件带其他参数"
    singleUploadWithPayload(req: UploadFile!): File!
    "上传多个文件不带参数"
    multipleUpload(files: [Upload!]!): [File!]!
    "上传多个文件带参数"
    multipleUploadWithPayload(req: [UploadFile!]!): [File!]!
}

